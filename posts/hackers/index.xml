<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hackers on Musings</title>
    <link>https://blog.ethanwilliams.me/posts/hackers/</link>
    <description>Recent content in Hackers on Musings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Ethan Williams</copyright>
    <lastBuildDate>Sat, 19 Jan 2019 16:05:24 -0500</lastBuildDate>
    
	<atom:link href="https://blog.ethanwilliams.me/posts/hackers/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reading 09: Birth of a Nerd</title>
      <link>https://blog.ethanwilliams.me/posts/hackers/reading09-birth-of-a-nerd/</link>
      <pubDate>Mon, 22 Apr 2019 15:12:33 -0400</pubDate>
      
      <guid>https://blog.ethanwilliams.me/posts/hackers/reading09-birth-of-a-nerd/</guid>
      <description>Firstly, Linus (or his editor) needs to decide if he&amp;rsquo;s writing in present or past tense. He constantly shift back and forth (even in the same paragraph), and it&amp;rsquo;s maddening.
Grammatical criticism aside, I&amp;rsquo;ve really enjoyed reading Linus&amp;rsquo;s memoir. In fact, I relate fairly well to his story of growing up as a nerd. No, I wasn&amp;rsquo;t nearly as antisocial as Linus, nor was I quite the programming prodigy, but growing up I definitely preferred playing video games in a dark room on a Friday night over going out to play sports or go to parties.</description>
    </item>
    
    <item>
      <title>Reading 04: Programming Languages</title>
      <link>https://blog.ethanwilliams.me/posts/hackers/reading04-programming-languages/</link>
      <pubDate>Sun, 24 Feb 2019 19:39:08 -0500</pubDate>
      
      <guid>https://blog.ethanwilliams.me/posts/hackers/reading04-programming-languages/</guid>
      <description>Paul Graham is right that your choice of programming language matters. He&amp;rsquo;s wrong about most everything else.
What programming language you pick when you start a project can be the difference between a project that&amp;rsquo;s near impossible and a project that can be finished in a month. Different languages, and the libraries and frameworks that go along with them, are often very well suited to certain tasks, making them very easy (or even trivial), while being completely unsuited for other tasks, making them needlessly complex and difficult.</description>
    </item>
    
    <item>
      <title>Reading 03: Hackers and Painters</title>
      <link>https://blog.ethanwilliams.me/posts/hackers/reading03-hackers-and-painters/</link>
      <pubDate>Mon, 18 Feb 2019 23:06:26 -0500</pubDate>
      
      <guid>https://blog.ethanwilliams.me/posts/hackers/reading03-hackers-and-painters/</guid>
      <description>Paul Graham writes that hackers are creators, makers more similar to artists than to engineers. He goes so far as to say that the term &amp;ldquo;software engineering&amp;rdquo; is misleading, that hackers should be less concerned with how to do something than what to do. This is a silly distinction: great hacks often don&amp;rsquo;t do completely new things, they do something that has already been done, but in a novel way. Hackers should very much be concerned with how things are done.</description>
    </item>
    
    <item>
      <title>Reading 01: Hardware Hackers</title>
      <link>https://blog.ethanwilliams.me/posts/hackers/reading01-hardware-hackers/</link>
      <pubDate>Sun, 27 Jan 2019 18:50:44 -0500</pubDate>
      
      <guid>https://blog.ethanwilliams.me/posts/hackers/reading01-hardware-hackers/</guid>
      <description>The hardware hackers of 1970s California (what would ultimately become Silicon Valley) thought that it was vital to spread computing to the masses, rejecting the ivory tower of MIT&amp;rsquo;s AI lab. It was this attitude that eventually led to the creation of the first microcomputers—computers that could fit in your living room, not just in university labs or corporate offices. Computers like the Altair 8800 and the Apple II were inconceivable to the giants of computing: IBM, HP, and the like.</description>
    </item>
    
    <item>
      <title>Reading 00: True Hackers</title>
      <link>https://blog.ethanwilliams.me/posts/hackers/reading00-true-hackers/</link>
      <pubDate>Sat, 19 Jan 2019 16:12:15 -0500</pubDate>
      
      <guid>https://blog.ethanwilliams.me/posts/hackers/reading00-true-hackers/</guid>
      <description>Stephen Levy writes that the &amp;ldquo;true hackers&amp;rdquo; at MIT in the fifties and sixties were primarily identified by following a shared hacker ethic:
 Access to computers—and anything which might teach you something about the way the world works—should be unlimited and total. Always yield to the Hands-On Imperative! All information should be free. Mistrust authority—promote decentralization. Hackers should be judged by their hacking, not criteria such as degrees, age, race, or position.</description>
    </item>
    
  </channel>
</rss>